C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.0\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.lst) CD DB
                    - NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 2.0 Component Pack 3
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.
   8          *
   9          * THIS FILE SHOULD NOT BE MODIFIED.
  10          *
  11          ********************************************************************************
  12          * Copyright 2011, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          ********************************************************************************/
  17          
  18          #include <string.h>
  19          #include <cytypes.h>
  20          #include <cydevice_trm.h>
  21          #include <cyfitter.h>
  22          #include <CyLib.h>
  23          #include <CyDmac.h>
  24          #include <cyfitter_cfg.h>
  25          
  26          /* Clock startup error codes                                                   */
  27          #define CYCLOCKSTART_NO_ERROR    0
  28          #define CYCLOCKSTART_XTAL_ERROR  1
  29          #define CYCLOCKSTART_32KHZ_ERROR 2
  30          #define CYCLOCKSTART_PLL_ERROR   3
  31          
  32          /*******************************************************************************
  33          * Function Name: CyClockStartupError
  34          ********************************************************************************
  35          * Summary:
  36          *  If an error is encountered during clock configuration (crystal startup error,
  37          *  PLL lock error, etc) the system will end up here.  Unless reimplemented by 
  38          *  the customer, an infinite loop will be encountered.
  39          *
  40          * Parameters:  
  41          *   void
  42          *
  43          * Return:
  44          *   void
  45          *
  46          *******************************************************************************/
  47          #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
  50          static void CyClockStartupError(uint8 errorCode)
  51          {
  52   1          /* To remove the compiler warning if errorCode not used.                */
  53   1          errorCode = errorCode;
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 2   

  54   1      
  55   1          /* `#START CyClockStartupError` */
  56   1      
  57   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc)    */
  58   1          /* we will end up here to allow the customer to implement something to  */
  59   1          /* deal with the clock condition.                                       */
  60   1      
  61   1          /* `#END` */
  62   1      
  63   1          /* If nothing else, stop here since the clocks have not started         */
  64   1          /* correctly.                                                           */
  65   1          while(1) {}
  66   1      }
  67          
  68          
  69          #undef CYCODE
  70          #undef CYDATA
  71          #undef CYXDATA
  72          #undef CYFAR
  73          #if defined(__C51__) || defined(__CX51__)
  74                  #define CYCODE code
  75                  #define CYDATA data
  76                  #define CYXDATA xdata
  77                  #define CYFAR far
  78          
  79                  #define CYPACKED
  80                  #define CYALIGNED
  81              #define DMAINITSEC
  82                  #define CY_CFG_MEMORY_BARRIER()
  83          
  84                  #ifndef CYCONFIGCPY_DECLARED
                              extern void cymemzero(void CYFAR *addr, uint16 size);
                              extern void cyconfigcpy(uint16 size, const void CYFAR *src, void CYFAR *dest) small;
                              extern void cyconfigcpycode(uint16 size, const void CYCODE *src, void CYFAR *dest);
                      #endif
  89          
  90          
  91                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  92                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  93                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  94          #else
                      #error Unsupported toolchain
              #endif
  97          
  98          /* Defines the layout and meaning of each entry in the cfg_memset_list used for clearing registers */
  99          typedef struct {
 100                  void CYFAR *address;
 101                  uint16 size;
 102          } CYPACKED cfg_memset_t;
 103          
 104          /* Defines the layout and meaning of each entry in the cfg_memcpy_list used for initializing registers */
 105          typedef struct {
 106                  void CYFAR *dest;
 107                  const void CYCODE *src;
 108                  uint16 size;
 109          } CYPACKED cfg_memcpy_t;
 110          
 111          /* TD structure for big-endian systems. Requires 2-byte endian swap */
 112          struct td_t {
 113                  uint16 size;
 114                  uint8 flags;
 115                  uint8 next_td_ptr;
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 3   

 116                  uint16 src;
 117                  uint16 dest;
 118          } CYPACKED;
 119          
 120          /* PICU_5 Address: CYDEV_PICU_INTTYPE_PICU5_BASE Size (bytes): 8 */
 121          static const uint8 CYCODE BS_PICU_5_VAL[] DMAINITSEC = {
 122                  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
 123          
 124          /* IOPORT_0 Address: CYDEV_PRTDSI_PRT0_BASE Size (bytes): 7 */
 125          static const uint8 CYCODE BS_IOPORT_0_VAL[] DMAINITSEC = {
 126                  0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00};
 127          
 128          /* IOPORT_5 Address: CYDEV_PRTDSI_PRT5_BASE Size (bytes): 7 */
 129          static const uint8 CYCODE BS_IOPORT_5_VAL[] DMAINITSEC = {
 130                  0x40, 0x20, 0x00, 0x00, 0x06, 0x00, 0x00};
 131          
 132          /* IDMUX_IRQ Address: CYREG_IDMUX_IRQ_CTL0 Size (bytes): 8 */
 133          static const uint8 CYCODE BS_IDMUX_IRQ_VAL[] DMAINITSEC = {
 134                  0x03, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0C};
 135          
 136          /* UDB_1_4_0_CONFIG Address: CYDEV_UCFG_B0_P1_U1_BASE Size (bytes): 128 */
 137          static const uint8 CYCODE BS_UDB_1_4_0_CONFIG_VAL[] DMAINITSEC = {
 138                  0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x81, 0x00, 0x06, 0x0C, 0xF9, 0x03, 0x21, 0x10, 0x56, 
 139                  0xC3, 0x00, 0x3C, 0xFF, 0x4C, 0x08, 0xB3, 0x00, 0x08, 0x08, 0x00, 0x00, 0x3D, 0x27, 0xC0, 0xD8, 
 140                  0xCF, 0x23, 0x30, 0xDC, 0x02, 0x00, 0x20, 0x00, 0x04, 0x00, 0x00, 0x08, 0x00, 0xDD, 0xF3, 0x22, 
 141                  0x3F, 0x00, 0x00, 0x1F, 0x4C, 0x08, 0x8C, 0xE0, 0x00, 0x00, 0x82, 0x88, 0x00, 0x00, 0x00, 0x00, 
 142                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 143                  0x00, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 
 144                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 145                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 146          
 147          /* UDB_1_3_0_CONFIG Address: CYDEV_UCFG_B0_P2_U0_BASE Size (bytes): 128 */
 148          static const uint8 CYCODE BS_UDB_1_3_0_CONFIG_VAL[] DMAINITSEC = {
 149                  0x01, 0x18, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x04, 0x30, 0x01, 0xF1, 0x08, 0x02, 0x10, 
 150                  0x0F, 0x18, 0xF0, 0x00, 0x33, 0x00, 0xCC, 0x20, 0x00, 0x00, 0x88, 0x20, 0x00, 0x08, 0xCE, 0x10, 
 151                  0x3F, 0x08, 0xC0, 0x10, 0x20, 0x01, 0x00, 0x06, 0x10, 0x00, 0x00, 0x07, 0x00, 0x01, 0x44, 0x02, 
 152                  0x00, 0x18, 0xFF, 0x00, 0x00, 0x07, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x04, 0x40, 
 153                  0x14, 0x06, 0x02, 0x00, 0x05, 0x00, 0xE0, 0x0C, 0x18, 0xFF, 0xFF, 0xFF, 0x62, 0xA0, 0xF0, 0x41, 
 154                  0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x11, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x01, 
 155                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x10, 0x30, 0x10, 0x00, 0x10, 0x10, 0x12, 
 156                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 157          
 158          /* UDB_1_3_1_CONFIG Address: CYDEV_UCFG_B0_P2_U1_BASE Size (bytes): 128 */
 159          static const uint8 CYCODE BS_UDB_1_3_1_CONFIG_VAL[] DMAINITSEC = {
 160                  0x01, 0x01, 0x82, 0x02, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, 0x08, 0x00, 0x00, 0x10, 0x00, 0x04, 
 161                  0x00, 0x81, 0x00, 0x02, 0x01, 0x10, 0x02, 0x04, 0x00, 0x20, 0x00, 0x08, 0x10, 0x00, 0x04, 0x00, 
 162                  0x0C, 0x0C, 0x30, 0x30, 0x10, 0x00, 0x04, 0x00, 0x00, 0x80, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
 163                  0x00, 0xFF, 0x7F, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 164                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 165                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
 166                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 167                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 168          
 169          /* UDB_1_2_0_CONFIG Address: CYDEV_UCFG_B0_P3_U1_BASE Size (bytes): 128 */
 170          static const uint8 CYCODE BS_UDB_1_2_0_CONFIG_VAL[] DMAINITSEC = {
 171                  0x35, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00, 0x04, 0x00, 0x29, 0x08, 0x10, 0x10, 0x80, 0x00, 0x00, 
 172                  0x35, 0x73, 0x00, 0x0C, 0x01, 0x00, 0x34, 0x00, 0x02, 0x03, 0x00, 0x14, 0x00, 0x80, 0x14, 0x00, 
 173                  0x05, 0x00, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x02, 0x80, 0x00, 0x00, 
 174                  0x10, 0x0F, 0x0C, 0x60, 0x03, 0x80, 0x20, 0x10, 0xA0, 0x08, 0x08, 0x02, 0x00, 0x00, 0x00, 0x54, 
 175                  0x03, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x01, 0x11, 0xFF, 0x0F, 0xFF, 0x40, 0x20, 0xF0, 0x05, 
 176                  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x01, 
 177                  0x40, 0xA8, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 4   

 178                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 179          
 180          /* UDB_0_4_0_CONFIG Address: CYDEV_UCFG_B0_P6_U1_BASE Size (bytes): 128 */
 181          static const uint8 CYCODE BS_UDB_0_4_0_CONFIG_VAL[] DMAINITSEC = {
 182                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 183                  0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 184                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 185                  0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 186                  0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x0C, 0xFF, 0xFF, 0xFF, 0x00, 0xA0, 0x00, 0x04, 
 187                  0x18, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x02, 0x22, 0x00, 0x01, 
 188                  0x40, 0x00, 0xC0, 0x00, 0x40, 0x40, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 
 189                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 190          
 191          /* UDB_1_0_0_CONFIG Address: CYDEV_UCFG_B1_P2_U0_BASE Size (bytes): 128 */
 192          static const uint8 CYCODE BS_UDB_1_0_0_CONFIG_VAL[] DMAINITSEC = {
 193                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 194                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 195                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 196                  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 197                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 198                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
 199                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 200                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 201          
 202          /* UDB_1_1_0_CONFIG Address: CYDEV_UCFG_B1_P3_U1_BASE Size (bytes): 128 */
 203          static const uint8 CYCODE BS_UDB_1_1_0_CONFIG_VAL[] DMAINITSEC = {
 204                  0x00, 0x00, 0x03, 0x00, 0x0C, 0x10, 0x71, 0x00, 0x09, 0x00, 0xF0, 0x08, 0x10, 0x04, 0xAC, 0x00, 
 205                  0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 
 206                  0x14, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0xDC, 0x01, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 
 207                  0x1F, 0x10, 0x00, 0x20, 0xE0, 0x08, 0x00, 0x07, 0x00, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x15, 
 208                  0x54, 0x02, 0x00, 0x00, 0x00, 0xB0, 0xC0, 0x0E, 0x1A, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x44, 
 209                  0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x00, 0x10, 0x00, 0x00, 0x01, 
 210                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
 211                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 212          
 213          /* UDB_0_1_1_CONFIG Address: CYDEV_UCFG_B1_P4_U0_BASE Size (bytes): 128 */
 214          static const uint8 CYCODE BS_UDB_0_1_1_CONFIG_VAL[] DMAINITSEC = {
 215                  0x00, 0x94, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xD0, 0x00, 0x55, 0x00, 0xAA, 
 216                  0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 217                  0x00, 0x33, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 218                  0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
 219                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 220                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x28, 0x00, 0x04, 0x00, 0x04, 0x10, 0x10, 0x00, 0x01, 
 221                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 222                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 223          
 224          /* UDB_0_0_0_CONFIG Address: CYDEV_UCFG_B1_P5_U0_BASE Size (bytes): 128 */
 225          static const uint8 CYCODE BS_UDB_0_0_0_CONFIG_VAL[] DMAINITSEC = {
 226                  0x13, 0x84, 0x64, 0x00, 0x00, 0x56, 0x00, 0x09, 0x38, 0x80, 0xC0, 0x04, 0x98, 0x04, 0x02, 0x80, 
 227                  0x21, 0x60, 0xD8, 0x00, 0x02, 0x01, 0x98, 0x00, 0x00, 0x84, 0x00, 0x00, 0x02, 0x84, 0x00, 0x00, 
 228                  0x9A, 0x07, 0x00, 0x38, 0x98, 0x00, 0x02, 0x00, 0xFC, 0x04, 0x03, 0x00, 0x9A, 0x0A, 0x00, 0x10, 
 229                  0x0F, 0x08, 0xE0, 0x7F, 0x00, 0x80, 0x13, 0x02, 0x00, 0x08, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x51, 
 230                  0x43, 0x01, 0x20, 0x00, 0x05, 0xBE, 0xDC, 0x0F, 0x1F, 0xFF, 0xFF, 0xFF, 0x22, 0x00, 0xF0, 0x08, 
 231                  0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x11, 0x11, 0x00, 0x01, 
 232                  0x00, 0x00, 0xC0, 0x00, 0x40, 0x01, 0x10, 0x11, 0xC0, 0x01, 0x00, 0x11, 0x40, 0x01, 0x40, 0x01, 
 233                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 234          
 235          /* UDB_0_0_1_CONFIG Address: CYDEV_UCFG_B1_P5_U1_BASE Size (bytes): 128 */
 236          static const uint8 CYCODE BS_UDB_0_0_1_CONFIG_VAL[] DMAINITSEC = {
 237                  0x0D, 0x00, 0x10, 0x00, 0x21, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1D, 0x00, 0x00, 0x00, 
 238                  0x02, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x40, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
 239                  0x1D, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x68, 0x00, 0x02, 0x00, 0x64, 0x00, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 5   

 240                  0x0F, 0x00, 0x60, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 
 241                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 242                  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x01, 0x10, 0x00, 0x01, 
 243                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 244                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 245          
 246          /* UWRK_B0_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B0_BASE + 0x00000070 Size (bytes): 32 */
 247          static const uint8 CYCODE BS_UWRK_B0_WRK_STATCTL_BITS_VAL[] DMAINITSEC = {
 248                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 249                  0x00, 0x00, 0x00, 0x3A, 0x78, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 250          
 251          /* UWRK_B1_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B1_BASE + 0x00000070 Size (bytes): 32 */
 252          static const uint8 CYCODE BS_UWRK_B1_WRK_STATCTL_BITS_VAL[] DMAINITSEC = {
 253                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 254                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 255          
 256          /* DSISWITCH_0_0 Address: CYDEV_UCFG_DSI13_BASE Size (bytes): 128 */
 257          static const uint8 CYCODE BS_DSISWITCH_0_0_VAL[] DMAINITSEC = {
 258                  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
 259                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 260                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 261                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 262                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 263                  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 264                  0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 265                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 266          
 267          /* DSI0_0_HV_ROUTING Address: CYDEV_UCFG_DSI13_BASE + 0x00000080 Size (bytes): 128 */
 268          static const uint8 CYCODE BS_DSI0_0_HV_ROUTING_VAL[] DMAINITSEC = {
 269                  0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
 270                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 271                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 272                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 273                  0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 274                  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 275                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 276                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 277          
 278          /* DSI0_3_HV_ROUTING Address: CYDEV_UCFG_DSI6_BASE + 0x00000080 Size (bytes): 128 */
 279          static const uint8 CYCODE BS_DSI0_3_HV_ROUTING_VAL[] DMAINITSEC = {
 280                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 281                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 282                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 
 283                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 284                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 285                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 286                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 287                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 288          
 289          /* DSI0_4_HV_ROUTING Address: CYDEV_UCFG_DSI5_BASE + 0x00000080 Size (bytes): 128 */
 290          static const uint8 CYCODE BS_DSI0_4_HV_ROUTING_VAL[] DMAINITSEC = {
 291                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 292                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 293                  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 294                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 295                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 296                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 297                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 298                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 299          
 300          /* DSISWITCH_0_5 Address: CYDEV_UCFG_DSI4_BASE Size (bytes): 128 */
 301          static const uint8 CYCODE BS_DSISWITCH_0_5_VAL[] DMAINITSEC = {
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 6   

 302                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 303                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 304                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 305                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 306                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 307                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 308                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 309                  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 310          
 311          /* DSI0_5_HV_ROUTING Address: CYDEV_UCFG_DSI4_BASE + 0x00000080 Size (bytes): 128 */
 312          static const uint8 CYCODE BS_DSI0_5_HV_ROUTING_VAL[] DMAINITSEC = {
 313                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 314                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 315                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 316                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 317                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 318                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
 319                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 320                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 321          
 322          /* UDBSWITCH_0_0 Address: CYDEV_UCFG_B1_P5_ROUTE_BASE Size (bytes): 128 */
 323          static const uint8 CYCODE BS_UDBSWITCH_0_0_VAL[] DMAINITSEC = {
 324                  0x00, 0x40, 0x00, 0x88, 0x20, 0x08, 0x83, 0x00, 0x02, 0x80, 0x00, 0x10, 0x20, 0x40, 0x50, 0x00, 
 325                  0xA0, 0x00, 0x05, 0x00, 0x42, 0x00, 0x24, 0x00, 0x40, 0x00, 0x00, 0x89, 0x00, 0x00, 0x52, 0x10, 
 326                  0x00, 0x18, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00, 
 327                  0xE0, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xA6, 0x10, 0x00, 0x00, 0x00, 0x00, 
 328                  0x40, 0x14, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 
 329                  0x10, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x10, 0x04, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 
 330                  0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 331                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 332          
 333          /* UDB_1_0_HV_ROUTING Address: CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 334          static const uint8 CYCODE BS_UDB_1_0_HV_ROUTING_VAL[] DMAINITSEC = {
 335                  0x00, 0x00, 0x11, 0x00, 0x10, 0x88, 0x00, 0x01, 0x00, 0x10, 0x00, 0x41, 0x10, 0x88, 0x00, 0x80, 
 336                  0x00, 0xD0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 
 337                  0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 338                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 339                  0xFB, 0x00, 0xFD, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x0F, 0x00, 0x0F, 0x00, 
 340                  0x0F, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 341                  0x03, 0x00, 0x40, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 342                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 343          
 344          /* UDBSWITCH_1_0 Address: CYDEV_UCFG_B1_P2_ROUTE_BASE Size (bytes): 128 */
 345          static const uint8 CYCODE BS_UDBSWITCH_1_0_VAL[] DMAINITSEC = {
 346                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 347                  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 348                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 349                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 350                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 351                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 352                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 353                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 354          
 355          /* UDB_2_0_HV_ROUTING Address: CYDEV_UCFG_B1_P2_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 356          static const uint8 CYCODE BS_UDB_2_0_HV_ROUTING_VAL[] DMAINITSEC = {
 357                  0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 
 358                  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x30, 0x00, 0x00, 
 359                  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 
 360                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 361                  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 362                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 363                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 7   

 364                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 365          
 366          /* UDBSWITCH_0_1 Address: CYDEV_UCFG_B1_P4_ROUTE_BASE Size (bytes): 128 */
 367          static const uint8 CYCODE BS_UDBSWITCH_0_1_VAL[] DMAINITSEC = {
 368                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 369                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 370                  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
 371                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, 0x01, 
 372                  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 373                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 374                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x50, 0x00, 0x00, 
 375                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 376          
 377          /* UDB_1_1_HV_ROUTING Address: CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 378          static const uint8 CYCODE BS_UDB_1_1_HV_ROUTING_VAL[] DMAINITSEC = {
 379                  0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 
 380                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 381                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 382                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 383                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0xB0, 0x00, 
 384                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 385                  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 386                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 387          
 388          /* UDBSWITCH_1_1 Address: CYDEV_UCFG_B1_P3_ROUTE_BASE Size (bytes): 128 */
 389          static const uint8 CYCODE BS_UDBSWITCH_1_1_VAL[] DMAINITSEC = {
 390                  0x04, 0x22, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 
 391                  0x80, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 392                  0x40, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 393                  0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x28, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 394                  0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
 395                  0x20, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 396                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 397                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 398          
 399          /* UDB_2_1_HV_ROUTING Address: CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 400          static const uint8 CYCODE BS_UDB_2_1_HV_ROUTING_VAL[] DMAINITSEC = {
 401                  0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
 402                  0x28, 0x10, 0x00, 0x08, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 
 403                  0x08, 0x00, 0x02, 0x80, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 404                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 405                  0x0F, 0x00, 0x02, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x0A, 0x00, 0x0E, 0x00, 
 406                  0x05, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 407                  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 408                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 409          
 410          /* UDBSWITCH_1_2 Address: CYDEV_UCFG_B0_P3_ROUTE_BASE Size (bytes): 128 */
 411          static const uint8 CYCODE BS_UDBSWITCH_1_2_VAL[] DMAINITSEC = {
 412                  0x50, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x14, 0x80, 0x00, 0x00, 0x00, 0x00, 
 413                  0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x14, 0x80, 0x00, 0x00, 0x00, 0x00, 
 414                  0x00, 0x06, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
 415                  0x30, 0x02, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x84, 0x30, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 
 416                  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 
 417                  0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00, 0x00, 
 418                  0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 419                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 420          
 421          /* UDB_2_2_HV_ROUTING Address: CYDEV_UCFG_B0_P3_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 422          static const uint8 CYCODE BS_UDB_2_2_HV_ROUTING_VAL[] DMAINITSEC = {
 423                  0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 424                  0xF0, 0x20, 0x00, 0x40, 0x01, 0x00, 0x30, 0x08, 0x40, 0x40, 0x00, 0x00, 0x00, 0x32, 0x04, 0x00, 
 425                  0x00, 0x00, 0x80, 0x00, 0x00, 0x20, 0x00, 0x02, 0x00, 0x00, 0x01, 0x08, 0x80, 0x20, 0x00, 0x21, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 8   

 426                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 427                  0x0B, 0x00, 0x0F, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x0D, 0x00, 0x0E, 0x00, 
 428                  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 429                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 430                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 431          
 432          /* UDB_1_3_HV_ROUTING Address: CYDEV_UCFG_B0_P5_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 433          static const uint8 CYCODE BS_UDB_1_3_HV_ROUTING_VAL[] DMAINITSEC = {
 434                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 435                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 436                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 
 437                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 438                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 439                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 440                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 441                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 442          
 443          /* UDBSWITCH_1_3 Address: CYDEV_UCFG_B0_P2_ROUTE_BASE Size (bytes): 128 */
 444          static const uint8 CYCODE BS_UDBSWITCH_1_3_VAL[] DMAINITSEC = {
 445                  0x05, 0xA0, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x42, 0x00, 0x9A, 0x00, 0x00, 0x40, 0x20, 0x00, 
 446                  0x28, 0x00, 0x82, 0x00, 0x00, 0x02, 0x00, 0x28, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x20, 0x08, 
 447                  0x00, 0x12, 0x01, 0x81, 0x40, 0x00, 0x02, 0x00, 0x80, 0x10, 0x04, 0x02, 0x00, 0x00, 0x01, 0x08, 
 448                  0x80, 0x08, 0x00, 0x21, 0x00, 0x20, 0x02, 0x08, 0x00, 0xA0, 0x01, 0x08, 0x01, 0x00, 0x44, 0x00, 
 449                  0x02, 0x02, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 
 450                  0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
 451                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x82, 0x45, 0x28, 0x00, 0x00, 0x00, 0x00, 
 452                  0x28, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 453          
 454          /* UDB_2_3_HV_ROUTING Address: CYDEV_UCFG_B0_P2_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 455          static const uint8 CYCODE BS_UDB_2_3_HV_ROUTING_VAL[] DMAINITSEC = {
 456                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 457                  0x80, 0x00, 0x88, 0x00, 0x40, 0x00, 0x12, 0x01, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x22, 0x00, 0x80, 
 458                  0x00, 0x00, 0x84, 0x20, 0x28, 0x20, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 
 459                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 460                  0x5F, 0x00, 0xAF, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAF, 0x00, 0xEF, 0x00, 0xDF, 0x00, 
 461                  0x0D, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 462                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 463                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 464          
 465          /* UDBSWITCH_0_4 Address: CYDEV_UCFG_B0_P6_ROUTE_BASE Size (bytes): 128 */
 466          static const uint8 CYCODE BS_UDBSWITCH_0_4_VAL[] DMAINITSEC = {
 467                  0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 468                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 
 469                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 470                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 471                  0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 472                  0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 473                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 474                  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 475          
 476          /* UDB_1_4_HV_ROUTING Address: CYDEV_UCFG_B0_P6_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 477          static const uint8 CYCODE BS_UDB_1_4_HV_ROUTING_VAL[] DMAINITSEC = {
 478                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 479                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 480                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 481                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 482                  0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 483                  0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 484                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 485                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 486          
 487          /* UDBSWITCH_1_4 Address: CYDEV_UCFG_B0_P1_ROUTE_BASE Size (bytes): 128 */
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 9   

 488          static const uint8 CYCODE BS_UDBSWITCH_1_4_VAL[] DMAINITSEC = {
 489                  0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x91, 0x10, 0x00, 0x00, 0x00, 0x00, 
 490                  0x08, 0x04, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC1, 0x81, 0x20, 0x00, 0x00, 0x00, 0x00, 
 491                  0x00, 0x04, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 492                  0x38, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0C, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
 493                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 494                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
 495                  0x00, 0x20, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 496                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 497          
 498          /* UDB_2_4_HV_ROUTING Address: CYDEV_UCFG_B0_P1_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 499          static const uint8 CYCODE BS_UDB_2_4_HV_ROUTING_VAL[] DMAINITSEC = {
 500                  0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 501                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 502                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 503                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 504                  0x03, 0x00, 0x0F, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x0F, 0x00, 0x0E, 0x00, 
 505                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 506                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 507                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 508          
 509          /* DSISWITCH_1_0 Address: CYDEV_UCFG_DSI9_BASE Size (bytes): 128 */
 510          static const uint8 CYCODE BS_DSISWITCH_1_0_VAL[] DMAINITSEC = {
 511                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 512                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 513                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 514                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 515                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 516                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 517                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 518                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 519          
 520          /* DSI3_0_HV_ROUTING Address: CYDEV_UCFG_DSI9_BASE + 0x00000080 Size (bytes): 128 */
 521          static const uint8 CYCODE BS_DSI3_0_HV_ROUTING_VAL[] DMAINITSEC = {
 522                  0x00, 0x10, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 523                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 524                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 525                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 526                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
 527                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 528                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 529                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 530          
 531          /* DSISWITCH_1_2 Address: CYDEV_UCFG_DSI3_BASE Size (bytes): 128 */
 532          static const uint8 CYCODE BS_DSISWITCH_1_2_VAL[] DMAINITSEC = {
 533                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 534                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 535                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 536                  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 537                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 538                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 539                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 540                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 541          
 542          /* DSI3_2_HV_ROUTING Address: CYDEV_UCFG_DSI3_BASE + 0x00000080 Size (bytes): 128 */
 543          static const uint8 CYCODE BS_DSI3_2_HV_ROUTING_VAL[] DMAINITSEC = {
 544                  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 545                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 546                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 547                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 548                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
 549                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 10  

 550                  0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 551                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 552          
 553          /* DSISWITCH_1_4 Address: CYDEV_UCFG_DSI1_BASE Size (bytes): 128 */
 554          static const uint8 CYCODE BS_DSISWITCH_1_4_VAL[] DMAINITSEC = {
 555                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 556                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 557                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 558                  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 559                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 560                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 561                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 562                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 563          
 564          /* DSI3_4_HV_ROUTING Address: CYDEV_UCFG_DSI1_BASE + 0x00000080 Size (bytes): 128 */
 565          static const uint8 CYCODE BS_DSI3_4_HV_ROUTING_VAL[] DMAINITSEC = {
 566                  0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 567                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 
 568                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 569                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 570                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
 571                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 572                  0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 573                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 574          
 575          /* DSISWITCH_1_5 Address: CYDEV_UCFG_DSI0_BASE Size (bytes): 128 */
 576          static const uint8 CYCODE BS_DSISWITCH_1_5_VAL[] DMAINITSEC = {
 577                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 578                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 579                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 580                  0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 581                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 582                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 583                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 584                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 585          
 586          /* DSI3_5_HV_ROUTING Address: CYDEV_UCFG_DSI0_BASE + 0x00000080 Size (bytes): 128 */
 587          static const uint8 CYCODE BS_DSI3_5_HV_ROUTING_VAL[] DMAINITSEC = {
 588                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 589                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 590                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 591                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 592                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
 593                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 594                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 595                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 596          
 597          /* UCFG_BCTL1 Address: CYREG_BCTL1_MDCLK_EN Size (bytes): 16 */
 598          static const uint8 CYCODE BS_UCFG_BCTL1_VAL[] DMAINITSEC = {
 599                  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00};
 600          
 601          /* UCFG_BCTL0 Address: CYREG_BCTL0_MDCLK_EN Size (bytes): 16 */
 602          static const uint8 CYCODE BS_UCFG_BCTL0_VAL[] DMAINITSEC = {
 603                  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00};
 604          
 605          /* IOPINS0_0 Address: CYREG_PRT0_DR Size (bytes): 10 */
 606          static const uint8 CYCODE BS_IOPINS0_0_VAL[] DMAINITSEC = {
 607                  0x88, 0x00, 0x77, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 608          
 609          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
 610          static const uint8 CYCODE BS_IOPINS0_7_VAL[] DMAINITSEC = {
 611                  0x00, 0x3C, 0x3C, 0x00, 0x10, 0x00, 0x00, 0x00};
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 11  

 612          
 613          /* IOPINS0_8 Address: CYREG_PRT15_DM0 Size (bytes): 8 */
 614          static const uint8 CYCODE BS_IOPINS0_8_VAL[] DMAINITSEC = {
 615                  0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00};
 616          
 617          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 618          static const uint8 CYCODE BS_IOPINS0_2_VAL[] DMAINITSEC = {
 619                  0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00};
 620          
 621          /* IOPINS0_3 Address: CYREG_PRT3_DR Size (bytes): 10 */
 622          static const uint8 CYCODE BS_IOPINS0_3_VAL[] DMAINITSEC = {
 623                  0xC0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 624          
 625          /* IOPINS0_4 Address: CYREG_PRT4_DM0 Size (bytes): 8 */
 626          static const uint8 CYCODE BS_IOPINS0_4_VAL[] DMAINITSEC = {
 627                  0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00};
 628          
 629          /* IOPINS0_5 Address: CYREG_PRT5_DR Size (bytes): 10 */
 630          static const uint8 CYCODE BS_IOPINS0_5_VAL[] DMAINITSEC = {
 631                  0x10, 0x00, 0x86, 0x71, 0x71, 0x00, 0x61, 0x00, 0x00, 0x00};
 632          
 633          /* IOPINS0_6 Address: CYREG_PRT6_DM0 Size (bytes): 8 */
 634          static const uint8 CYCODE BS_IOPINS0_6_VAL[] DMAINITSEC = {
 635                  0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00};
 636          
 637          
 638          /* PHUB_CH1_CFGMEM_CFG0/1 initialization data */
 639          static const uint8 CYCODE CH1_ADDR_DATA0[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
             -;
 640          
 641          /* PHUB_CH2_CFGMEM_CFG0/1 initialization data */
 642          static const uint8 CYCODE CH2_ADDR_DATA0[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00 }
             -;
 643          
 644          /* PHUB_CH3_CFGMEM_CFG0/1 initialization data */
 645          static const uint8 CYCODE CH3_ADDR_DATA0[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00 }
             -;
 646          
 647          /* PHUB_CH4_CFGMEM_CFG0/1 initialization data */
 648          static const uint8 CYCODE CH4_ADDR_DATA0[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x00 }
             -;
 649          
 650          /* Initialization data for each DMA channel's TD registers */
 651          static const uint8 CYCODE DMA_TD_START_CMD[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x01 };
 652          
 653          static uint32 CYXDATA DMA_ZERO_VAL CYALIGNED;
 654          
 655          /* This table holds all of the initialization data necessary for the DMA
 656             process to transfer data from the source location to the destination. */
 657          static const struct td_t CYCODE CFG_TD_LIST0[] DMAINITSEC = {
 658          /* Size, Flags, Next, Source, Destination */
 659                  { 8, 0x23, 0x02, (uint16)(&CH1_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM1_CFG0) },        /* TD 1 */
 660                  { 8, 0x23, 0x03, (uint16)(&CH2_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM2_CFG0) },        /* TD 2 */
 661                  { 8, 0x23, 0x04, (uint16)(&CH3_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM3_CFG0) },        /* TD 3 */
 662                  { 8, 0x23, 0x05, (uint16)(&CH4_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM4_CFG0) },        /* TD 4 */
 663                  { 5, 0x23, 0x06, (uint16)(&DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH1_BASIC_CFG) },     /* TD 5 */
 664                  { 5, 0x23, 0x07, (uint16)(&DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH2_BASIC_CFG) },     /* TD 6 */
 665                  { 5, 0x23, 0x08, (uint16)(&DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH3_BASIC_CFG) },     /* TD 7 */
 666                  { 5, 0x23, 0xFE, (uint16)(&DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH4_BASIC_CFG) },     /* TD 8 */
 667                  { 16, 0x22, 0xFE, (uint16)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT1_DR) },   /* TD 9 */
 668                  { 640, 0x22, 0x0B, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P0_U0_BASE) },       /* TD 10 */
 669                  { 128, 0x22, 0x0C, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P3_U0_BASE) },       /* TD 11 */
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 12  

 670                  { 896, 0x22, 0x0D, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P4_U0_BASE) },       /* TD 12 */
 671                  { 128, 0x22, 0x0E, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P6_U0_BASE) },       /* TD 13 */
 672                  { 512, 0x22, 0x0F, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P7_U0_BASE) },       /* TD 14 */
 673                  { 128, 0x22, 0x10, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P2_U1_BASE) },       /* TD 15 */
 674                  { 128, 0x22, 0x11, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P3_U0_BASE) },       /* TD 16 */
 675                  { 128, 0x22, 0x12, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P4_U1_BASE) },       /* TD 17 */
 676                  { 256, 0x22, 0x13, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE) },   /* TD 18 */
 677                  { 128, 0x22, 0x14, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE) },   /* TD 19 */
 678                  { 128, 0x22, 0x15, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE) },   /* TD 20 */
 679                  { 512, 0x22, 0x16, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE) },   /* TD 21 */
 680                  { 256, 0x22, 0xFE, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE) },  /* TD 22 */
 681                  { 8, 0x23, 0x18, (uint16)(BS_PICU_5_VAL), (uint16)(CYDEV_PICU_INTTYPE_PICU5_BASE) },    /* TD 23 */
 682                  { 7, 0x23, 0x19, (uint16)(BS_IOPORT_0_VAL), (uint16)(CYDEV_PRTDSI_PRT0_BASE) }, /* TD 24 */
 683                  { 7, 0x23, 0x1A, (uint16)(BS_IOPORT_5_VAL), (uint16)(CYDEV_PRTDSI_PRT5_BASE) }, /* TD 25 */
 684                  { 32, 0x23, 0x1B, (uint16)(BS_UWRK_B0_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B0_BASE + 0x000000
             -70) },        /* TD 26 */
 685                  { 32, 0x23, 0xFE, (uint16)(BS_UWRK_B1_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B1_BASE + 0x000000
             -70) },        /* TD 27 */
 686                  { 8, 0x23, 0x1D, (uint16)(BS_IDMUX_IRQ_VAL), (uint16)(CYREG_IDMUX_IRQ_CTL0) },  /* TD 28 */
 687                  { 128, 0x23, 0x1E, (uint16)(BS_UDB_1_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U1_BASE) },     /* TD 29 */
 688                  { 128, 0x23, 0x1F, (uint16)(BS_UDB_1_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U0_BASE) },     /* TD 30 */
 689                  { 128, 0x23, 0x20, (uint16)(BS_UDB_1_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U1_BASE) },     /* TD 31 */
 690                  { 128, 0x23, 0x21, (uint16)(BS_UDB_1_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U1_BASE) },     /* TD 32 */
 691                  { 128, 0x23, 0x22, (uint16)(BS_UDB_0_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U1_BASE) },     /* TD 33 */
 692                  { 128, 0x23, 0x23, (uint16)(BS_UDB_1_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U0_BASE) },     /* TD 34 */
 693                  { 128, 0x23, 0x24, (uint16)(BS_UDB_1_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U1_BASE) },     /* TD 35 */
 694                  { 128, 0x23, 0x25, (uint16)(BS_UDB_0_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U0_BASE) },     /* TD 36 */
 695                  { 128, 0x23, 0x26, (uint16)(BS_UDB_0_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P5_U0_BASE) },     /* TD 37 */
 696                  { 128, 0x23, 0x27, (uint16)(BS_UDB_0_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P5_U1_BASE) },     /* TD 38 */
 697                  { 128, 0x23, 0x28, (uint16)(BS_DSISWITCH_0_0_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE) },   /* TD 39 */
 698                  { 128, 0x23, 0x29, (uint16)(BS_DSI0_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE + 0x00000080) },  /*
             - TD 40 */
 699                  { 128, 0x23, 0x2A, (uint16)(BS_DSI0_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE + 0x00000080) },   /* 
             -TD 41 */
 700                  { 128, 0x23, 0x2B, (uint16)(BS_DSI0_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE + 0x00000080) },   /* 
             -TD 42 */
 701                  { 128, 0x23, 0x2C, (uint16)(BS_DSISWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE) },    /* TD 43 */
 702                  { 128, 0x23, 0x2D, (uint16)(BS_DSI0_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE + 0x00000080) },   /* 
             -TD 44 */
 703                  { 128, 0x23, 0x2E, (uint16)(BS_UDBSWITCH_0_0_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE) },     /* TD 45 */
 704                  { 128, 0x23, 0x2F, (uint16)(BS_UDB_1_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080
             -) },        /* TD 46 */
 705                  { 128, 0x23, 0x30, (uint16)(BS_UDBSWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE) },     /* TD 47 */
 706                  { 128, 0x23, 0x31, (uint16)(BS_UDB_2_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE + 0x00000080
             -) },        /* TD 48 */
 707                  { 128, 0x23, 0x32, (uint16)(BS_UDBSWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE) },     /* TD 49 */
 708                  { 128, 0x23, 0x33, (uint16)(BS_UDB_1_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080
             -) },        /* TD 50 */
 709                  { 128, 0x23, 0x34, (uint16)(BS_UDBSWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE) },     /* TD 51 */
 710                  { 128, 0x23, 0x35, (uint16)(BS_UDB_2_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080
             -) },        /* TD 52 */
 711                  { 128, 0x23, 0x36, (uint16)(BS_UDBSWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE) },     /* TD 53 */
 712                  { 128, 0x23, 0x37, (uint16)(BS_UDB_2_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE + 0x00000080
             -) },        /* TD 54 */
 713                  { 128, 0x23, 0x38, (uint16)(BS_UDB_1_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE + 0x00000080
             -) },        /* TD 55 */
 714                  { 128, 0x23, 0x39, (uint16)(BS_UDBSWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE) },     /* TD 56 */
 715                  { 128, 0x23, 0x3A, (uint16)(BS_UDB_2_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE + 0x00000080
             -) },        /* TD 57 */
 716                  { 128, 0x23, 0x3B, (uint16)(BS_UDBSWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE) },     /* TD 58 */
 717                  { 128, 0x23, 0x3C, (uint16)(BS_UDB_1_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE + 0x00000080
             -) },        /* TD 59 */
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 13  

 718                  { 128, 0x23, 0x3D, (uint16)(BS_UDBSWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE) },     /* TD 60 */
 719                  { 128, 0x23, 0x3E, (uint16)(BS_UDB_2_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE + 0x00000080
             -) },        /* TD 61 */
 720                  { 128, 0x23, 0x3F, (uint16)(BS_DSISWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE) },    /* TD 62 */
 721                  { 128, 0x23, 0x40, (uint16)(BS_DSI3_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE + 0x00000080) },   /* 
             -TD 63 */
 722                  { 128, 0x23, 0x41, (uint16)(BS_DSISWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE) },    /* TD 64 */
 723                  { 128, 0x23, 0x42, (uint16)(BS_DSI3_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE + 0x00000080) },   /* 
             -TD 65 */
 724                  { 128, 0x23, 0x43, (uint16)(BS_DSISWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE) },    /* TD 66 */
 725                  { 128, 0x23, 0x44, (uint16)(BS_DSI3_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE + 0x00000080) },   /* 
             -TD 67 */
 726                  { 128, 0x23, 0x45, (uint16)(BS_DSISWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE) },    /* TD 68 */
 727                  { 128, 0x23, 0x46, (uint16)(BS_DSI3_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE + 0x00000080) },   /* 
             -TD 69 */
 728                  { 16, 0x23, 0x47, (uint16)(BS_UCFG_BCTL1_VAL), (uint16)(CYREG_BCTL1_MDCLK_EN) },        /* TD 70 */
 729                  { 16, 0x23, 0xFE, (uint16)(BS_UCFG_BCTL0_VAL), (uint16)(CYREG_BCTL0_MDCLK_EN) },        /* TD 71 */
 730          };
 731          /*******************************************************************************
 732          * Function Name: cfg_dma_init
 733          ********************************************************************************
 734          * Summary:
 735          *  This function is used to copy device configuration data from constant values
 736          *  stored in memory into the proper chip configuration registers using DMA.  It
 737          *  pulls data out of the CFG_TD_LISTs to know exactly how/what to configure.
 738          *
 739          * Parameters:  
 740          *   void
 741          *
 742          * Return:
 743          *   void
 744          *
 745          *******************************************************************************/
 746          static void cfg_dma_init(void)
 747          {
 748   1              DMA_ZERO_VAL = 0u;
 749   1              DMAC_CFGMEM[0].CFG0[0] = 0x10;          /* set burstcount */
 750   1              DMAC_CH[0].basic_cfg[0] = 0x01u;        /* enable channel0 */
 751   1              DMAC_CH[0].basic_status[1] = 0;         /* set channel0's first td to 0 */
 752   1              
 753   1              DMAC_TDMEM[0].TD0[2] = 0x01;            /* set td0's next td to 1 */
 754   1              DMAC_TDMEM[0].TD0[3] = 0xA3;            /* set td0's flags */
 755   1              CY_SET_REG16((reg16 *) &DMAC_TDMEM[0].TD0[0], 71*8);                                    /* set td0's size */
 756   1              CY_SET_REG16((reg16 *) &DMAC_TDMEM[0].TD1[0], (uint16)(uint32)CFG_TD_LIST0);    /* set td0's src addr */
 757   1              CY_SET_REG16((reg16 *) &DMAC_TDMEM[0].TD1[2], CYDEV_PHUB_TDMEM1_BASE);  /* set td0's dst addr */
 758   1              CY_SET_REG16((reg16 *) &DMAC_CFGMEM[0].CFG1[0], (uint16)(CYDEV_FLS_BASE >> 16));                                /* set ch0's src high
             - addr */
 759   1              CY_SET_REG16((reg16 *) &DMAC_CFGMEM[0].CFG1[2], (uint16)(CYDEV_PHUB_TDMEM1_BASE >> 16));                                /* set ch0's 
             -dst high addr */
 760   1              DMAC_CH[1].basic_status[1] = 0x09; /* First TD = 9 */
 761   1              DMAC_CH[2].basic_status[1] = 0x0A; /* First TD = 10 */
 762   1              DMAC_CH[3].basic_status[1] = 0x17; /* First TD = 23 */
 763   1              DMAC_CH[4].basic_status[1] = 0x1C; /* First TD = 28 */
 764   1      
 765   1              CY_CFG_MEMORY_BARRIER();
 766   1              DMAC_CH[0].action[0] = CPU_REQ;    /* initiate the DMA transfer */
 767   1              CY_CFG_MEMORY_BARRIER();
 768   1      
 769   1              /* Wait for all DMA transfers to complete */
 770   1              while((CY_GET_REG8(CYREG_PHUB_CH0_BASIC_STATUS) & 0x01u)){}
 771   1              while((CY_GET_REG8(CYREG_PHUB_CH1_BASIC_STATUS) & 0x01u)){}
 772   1              while((CY_GET_REG8(CYREG_PHUB_CH2_BASIC_STATUS) & 0x01u)){}
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 14  

 773   1              while((CY_GET_REG8(CYREG_PHUB_CH3_BASIC_STATUS) & 0x01u)){}
 774   1              while((CY_GET_REG8(CYREG_PHUB_CH4_BASIC_STATUS) & 0x01u)){}
 775   1      
 776   1      
 777   1      }
 778          /*******************************************************************************
 779          * Function Name: ClockSetup
 780          ********************************************************************************
 781          *
 782          * Summary:
 783          *  Performs the initialization of all of the clocks in the device based on the
 784          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 785          *  clocks and setting the necessary dividers to produce the desired frequency. 
 786          *
 787          * Parameters:
 788          *  void
 789          *
 790          * Return:
 791          *  void
 792          *
 793          *******************************************************************************/
 794          static void ClockSetup(void)
 795          {
 796   1              reg32  timeout;
 797   1              reg32* timeout_p = &timeout;
 798   1              reg8   pllLock;
 799   1      
 800   1      
 801   1              /* Configure Digital Clocks based on settings from Clock DWR */
 802   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x580000);
 803   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x18000B);
 804   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x1905DB);
 805   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x192EDF);
 806   1      
 807   1              /* Configure ILO based on settings from Clock DWR */
 808   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02);
 809   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08);
 810   1      
 811   1              /* Configure IMO based on settings from Clock DWR */
 812   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03);
 813   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8(CYREG_FLSHID_CUST_TABLES_IMO_3MHZ)));
 814   1      
 815   1              /* Configure PLL based on settings from Clock DWR */
 816   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008);
 817   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051);
 818   1              /* Wait up to 250us for the PLL to lock */
 819   1              pllLock = 0;
 820   1              for (timeout = 250 / 10; *timeout_p && (pllLock != 0x03u); timeout--) { 
 821   2                      pllLock = 0x03u & ((pllLock << 1) | ((CY_GET_REG8(CYREG_FASTCLK_PLL_SR) & 0x01u) >> 0));
 822   2                      CyDelayCycles(10 * 48); /* Delay 10us based on 48MHz clock */
 823   2              }
 824   1      
 825   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 826   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0103);
 827   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 828   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07);
 829   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00);
 830   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48);
 831   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 832   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02);
 833   1      
 834   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8(CYREG_PM_ACT_CFG2) | 0x0F)));
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 15  

 835   1      }
 836          
 837          
 838          /* Analog API Functions */
 839          
 840          /*******************************************************************************
 841          * Function Name: AnalogSetDefault
 842          ********************************************************************************
 843          *
 844          * Summary:
 845          *  Sets up the analog portions of the chip to default values based on chip
 846          *  configuration options from the project.
 847          *
 848          * Parameters:
 849          *  void
 850          *
 851          * Return:
 852          *  void
 853          *
 854          *******************************************************************************/
 855          void AnalogSetDefault(void)
 856          {
 857   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u);
 858   1              CY_SET_REG8(CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 859   1              CY_SET_REG8(CYREG_BG_DFT1, (bg_xover_inl_trim >> 4) & 0x0Fu);
 860   1              CY_SET_REG8(CYREG_PUMP_CR0, 0x44);
 861   1      }
 862          
 863          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 864          
 865          
 866          /*******************************************************************************
 867          * Function Name: cyfitter_cfg
 868          ********************************************************************************
 869          * Summary:
 870          *  This function is called by the start-up code for the selected device. It
 871          *  performs all of the necessary device configuration based on the design
 872          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 873          *  as Clocks and Pins as well as any component configuration that is necessary.
 874          *
 875          * Parameters:  
 876          *   void
 877          *
 878          * Return:
 879          *   void
 880          *
 881          *******************************************************************************/
 882          void cyfitter_cfg(void)
 883          {
 884   1              /* Setup Flash Cycles based on 48MHz clock startup frequency. */
 885   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xF1 : 0xC0));
 886   1              {
 887   2                      cfg_dma_init();
 888   2      
 889   2                      /* Enable digital routing */
 890   2                      CY_SET_XTND_REG8(CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL0_BANK_CTL) | 0x02u);
 891   2                      CY_SET_XTND_REG8(CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL1_BANK_CTL) | 0x02u);
 892   2      
 893   2                      /* Enable UDB array */
 894   2                      CY_SET_REG8(CYREG_PM_ACT_CFG0, CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x40u);
 895   2                      CY_SET_REG8(CYREG_PM_AVAIL_CR2, CY_GET_REG8(CYREG_PM_AVAIL_CR2) | 0x10u);
 896   2              }
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 16  

 897   1      
 898   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 899   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT0_DR), (void CYCODE *)(BS_IOPINS0_0_VAL), 10);
 900   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT12_DM0), (void CYCODE *)(BS_IOPINS0_7_VAL), 8);
 901   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT15_DM0), (void CYCODE *)(BS_IOPINS0_8_VAL), 8);
 902   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT2_DM0), (void CYCODE *)(BS_IOPINS0_2_VAL), 8);
 903   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT3_DR), (void CYCODE *)(BS_IOPINS0_3_VAL), 10);
 904   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT4_DM0), (void CYCODE *)(BS_IOPINS0_4_VAL), 8);
 905   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT5_DR), (void CYCODE *)(BS_IOPINS0_5_VAL), 10);
 906   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT6_DM0), (void CYCODE *)(BS_IOPINS0_6_VAL), 8);
 907   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01);
 908   1              CY_SET_REG8((void CYXDATA *)(CYREG_PWRSYS_WAKE_TR2), 0x3A);
 909   1      
 910   1      
 911   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 912   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0x31 : 0x00));
 913   1              /* Setup clocks based on selections from Clock DWR */
 914   1              ClockSetup();
 915   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 916   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xB1 : 0x80));
 917   1      
 918   1              /* Perform basic analog initialization to defaults */
 919   1              AnalogSetDefault();
 920   1      
 921   1              /* Configure alternate active mode */
 922   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (void CYFAR *)CYDEV_PM_ACT_BASE, 14);
 923   1              CY_SET_REG8(CYREG_PM_STBY_CFG0, CY_GET_REG8(CYREG_PM_STBY_CFG0) & ~0x02u);      /* Disable CPU */
 924   1      }
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 17  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 50
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 53
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 65
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION cfg_dma_init (BEGIN)
                                           ; SOURCE LINE # 746
                                           ; SOURCE LINE # 747
                                           ; SOURCE LINE # 748
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7D00              MOV     R5,#00H
0006 7C00              MOV     R4,#00H
0008 900000      R     MOV     DPTR,#DMA_ZERO_VAL
000B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 749
000E 907600            MOV     DPTR,#07600H
0011 7410              MOV     A,#010H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 750
0014 907010            MOV     DPTR,#07010H
0017 7401              MOV     A,#01H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 751
001A 907019            MOV     DPTR,#07019H
001D E4                CLR     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 753
001F 907802            MOV     DPTR,#07802H
0022 7401              MOV     A,#01H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 754
0025 907803            MOV     DPTR,#07803H
0028 74A3              MOV     A,#0A3H
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 755
002B 7B02              MOV     R3,#02H
002D 7A78              MOV     R2,#078H
002F 7900              MOV     R1,#00H
0031 7D38              MOV     R5,#038H
0033 7C02              MOV     R4,#02H
0035 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 756
0038 7B02              MOV     R3,#02H
003A 7A78              MOV     R2,#078H
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 18  

003C 7904              MOV     R1,#04H
003E C003              PUSH    AR3
0040 C002              PUSH    AR2
0042 C001              PUSH    AR1
0044 7BFF              MOV     R3,#0FFH
0046 7A00        R     MOV     R2,#HIGH CFG_TD_LIST0
0048 7900        R     MOV     R1,#LOW CFG_TD_LIST0
004A AC02              MOV     R4,AR2
004C AD01              MOV     R5,AR1
004E D001              POP     AR1
0050 D002              POP     AR2
0052 D003              POP     AR3
0054 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 757
0057 7B02              MOV     R3,#02H
0059 7A78              MOV     R2,#078H
005B 7906              MOV     R1,#06H
005D 7D08              MOV     R5,#08H
005F 7C78              MOV     R4,#078H
0061 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 758
0064 7B02              MOV     R3,#02H
0066 7A76              MOV     R2,#076H
0068 7904              MOV     R1,#04H
006A 7D10              MOV     R5,#010H
006C 7C00              MOV     R4,#00H
006E 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 759
0071 7B02              MOV     R3,#02H
0073 7A76              MOV     R2,#076H
0075 7906              MOV     R1,#06H
0077 7D00              MOV     R5,#00H
0079 7C00              MOV     R4,#00H
007B 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 760
007E 907029            MOV     DPTR,#07029H
0081 7409              MOV     A,#09H
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 761
0084 907039            MOV     DPTR,#07039H
0087 740A              MOV     A,#0AH
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 762
008A 907049            MOV     DPTR,#07049H
008D 7417              MOV     A,#017H
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 763
0090 907059            MOV     DPTR,#07059H
0093 741C              MOV     A,#01CH
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 766
0096 907014            MOV     DPTR,#07014H
0099 7401              MOV     A,#01H
009B F0                MOVX    @DPTR,A
009C         ?C0004:
                                           ; SOURCE LINE # 770
009C 907018            MOV     DPTR,#07018H
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 20E0F7            JB      ACC.0,?C0004
00A5         ?C0005:
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 19  

00A5         ?C0006:
                                           ; SOURCE LINE # 771
00A5 907028            MOV     DPTR,#07028H
00A8 E0                MOVX    A,@DPTR
00A9 FF                MOV     R7,A
00AA EF                MOV     A,R7
00AB 20E0F7            JB      ACC.0,?C0006
00AE         ?C0007:
00AE         ?C0008:
                                           ; SOURCE LINE # 772
00AE 907038            MOV     DPTR,#07038H
00B1 E0                MOVX    A,@DPTR
00B2 FF                MOV     R7,A
00B3 EF                MOV     A,R7
00B4 20E0F7            JB      ACC.0,?C0008
00B7         ?C0009:
00B7         ?C0010:
                                           ; SOURCE LINE # 773
00B7 907048            MOV     DPTR,#07048H
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 20E0F7            JB      ACC.0,?C0010
00C0         ?C0011:
00C0         ?C0012:
                                           ; SOURCE LINE # 774
00C0 907058            MOV     DPTR,#07058H
00C3 E0                MOVX    A,@DPTR
00C4 FF                MOV     R7,A
00C5 EF                MOV     A,R7
00C6 20E0F7            JB      ACC.0,?C0012
00C9         ?C0013:
                                           ; SOURCE LINE # 777
00C9         ?C0014:
00C9 22                RET     
             ; FUNCTION cfg_dma_init (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 794
                                           ; SOURCE LINE # 795
                                           ; SOURCE LINE # 797
0000 7E00        R     MOV     R6,#HIGH timeout
0002 7F00        R     MOV     R7,#LOW timeout
0004 900000      R     MOV     DPTR,#timeout_p
0007 EE                MOV     A,R6
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 802
000C 7B00              MOV     R3,#00H
000E 7A40              MOV     R2,#040H
0010 7980              MOV     R1,#080H
0012 7F00              MOV     R7,#00H
0014 7E00              MOV     R6,#00H
0016 7D58              MOV     R5,#058H
0018 7C00              MOV     R4,#00H
001A 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 803
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 20  

0023 7F0B              MOV     R7,#0BH
0025 7E00              MOV     R6,#00H
0027 7D18              MOV     R5,#018H
0029 7C00              MOV     R4,#00H
002B 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 804
002E 7B00              MOV     R3,#00H
0030 7A40              MOV     R2,#040H
0032 7988              MOV     R1,#088H
0034 7FDB              MOV     R7,#0DBH
0036 7E05              MOV     R6,#05H
0038 7D19              MOV     R5,#019H
003A 7C00              MOV     R4,#00H
003C 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 805
003F 7B00              MOV     R3,#00H
0041 7A40              MOV     R2,#040H
0043 798C              MOV     R1,#08CH
0045 7FDF              MOV     R7,#0DFH
0047 7E2E              MOV     R6,#02EH
0049 7D19              MOV     R5,#019H
004B 7C00              MOV     R4,#00H
004D 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 808
0050 904300            MOV     DPTR,#04300H
0053 7402              MOV     A,#02H
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 809
0056 904000            MOV     DPTR,#04000H
0059 7408              MOV     A,#08H
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 812
005C 904200            MOV     DPTR,#04200H
005F 7403              MOV     A,#03H
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 813
0062 7B0C              MOV     R3,#0CH
0064 7A01              MOV     R2,#01H
0066 7908              MOV     R1,#08H
0068 120000      E     LCALL   _cyread8
006B 9046A1            MOV     DPTR,#046A1H
006E EF                MOV     A,R7
006F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 816
0070 7B00              MOV     R3,#00H
0072 7A42              MOV     R2,#042H
0074 7922              MOV     R1,#022H
0076 7D08              MOV     R5,#08H
0078 7C00              MOV     R4,#00H
007A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 817
007D 7B00              MOV     R3,#00H
007F 7A42              MOV     R2,#042H
0081 7920              MOV     R1,#020H
0083 7D51              MOV     R5,#051H
0085 7C10              MOV     R4,#010H
0087 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 819
008A 900000      R     MOV     DPTR,#pllLock
008D E4                CLR     A
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 820
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 21  

008F 7F19              MOV     R7,#019H
0091 7E00              MOV     R6,#00H
0093 7D00              MOV     R5,#00H
0095 7C00              MOV     R4,#00H
0097 900000      R     MOV     DPTR,#timeout
009A 120000      E     LCALL   ?C?LSTXDATA
009D         ?C0015:
009D 900000      R     MOV     DPTR,#timeout_p
00A0 E0                MOVX    A,@DPTR
00A1 FE                MOV     R6,A
00A2 A3                INC     DPTR
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 120000      E     LCALL   ?C?LLDXDATA
00AC EC                MOV     A,R4
00AD 4D                ORL     A,R5
00AE 4E                ORL     A,R6
00AF 4F                ORL     A,R7
00B0 604E              JZ      ?C0016
00B2 900000      R     MOV     DPTR,#pllLock
00B5 E0                MOVX    A,@DPTR
00B6 FF                MOV     R7,A
00B7 EF                MOV     A,R7
00B8 6403              XRL     A,#03H
00BA 6044              JZ      ?C0016
                                           ; SOURCE LINE # 821
00BC 904225            MOV     DPTR,#04225H
00BF E0                MOVX    A,@DPTR
00C0 FF                MOV     R7,A
00C1 EF                MOV     A,R7
00C2 5401              ANL     A,#01H
00C4 FF                MOV     R7,A
00C5 7E00              MOV     R6,#00H
00C7 900000      R     MOV     DPTR,#pllLock
00CA E0                MOVX    A,@DPTR
00CB FE                MOV     R6,A
00CC EE                MOV     A,R6
00CD 25E0              ADD     A,ACC
00CF FE                MOV     R6,A
00D0 EE                MOV     A,R6
00D1 4F                ORL     A,R7
00D2 FF                MOV     R7,A
00D3 EF                MOV     A,R7
00D4 5403              ANL     A,#03H
00D6 FF                MOV     R7,A
00D7 900000      R     MOV     DPTR,#pllLock
00DA EF                MOV     A,R7
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 822
00DC 7FE0              MOV     R7,#0E0H
00DE 7E01              MOV     R6,#01H
00E0 7D00              MOV     R5,#00H
00E2 7C00              MOV     R4,#00H
00E4 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 823
00E7 900000      R     MOV     DPTR,#timeout
00EA 120000      E     LCALL   ?C?LLDXDATA
00ED 7BFF              MOV     R3,#0FFH
00EF 7AFF              MOV     R2,#0FFH
00F1 79FF              MOV     R1,#0FFH
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 22  

00F3 78FF              MOV     R0,#0FFH
00F5 120000      E     LCALL   ?C?LADD
00F8 900000      R     MOV     DPTR,#timeout
00FB 120000      E     LCALL   ?C?LSTXDATA
00FE 809D              SJMP    ?C0015
0100         ?C0016:
                                           ; SOURCE LINE # 826
0100 7B00              MOV     R3,#00H
0102 7A40              MOV     R2,#040H
0104 7904              MOV     R1,#04H
0106 7D03              MOV     R5,#03H
0108 7C01              MOV     R4,#01H
010A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 827
010D 904004            MOV     DPTR,#04004H
0110 E4                CLR     A
0111 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 828
0112 904004            MOV     DPTR,#04004H
0115 7407              MOV     A,#07H
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 829
0118 904006            MOV     DPTR,#04006H
011B E4                CLR     A
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 830
011D 904008            MOV     DPTR,#04008H
0120 7448              MOV     A,#048H
0122 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 831
0123 904004            MOV     DPTR,#04004H
0126 E4                CLR     A
0127 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 832
0128 904001            MOV     DPTR,#04001H
012B 7402              MOV     A,#02H
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 834
012E 9043A2            MOV     DPTR,#043A2H
0131 E0                MOVX    A,@DPTR
0132 FF                MOV     R7,A
0133 EF                MOV     A,R7
0134 440F              ORL     A,#0FH
0136 FF                MOV     R7,A
0137 EF                MOV     A,R7
0138 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 835
0139 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 855
                                           ; SOURCE LINE # 856
                                           ; SOURCE LINE # 857
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 858
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 23  

000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 859
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 860
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 861
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 882
                                           ; SOURCE LINE # 883
                                           ; SOURCE LINE # 885
0000 904800            MOV     DPTR,#04800H
0003 74C0              MOV     A,#0C0H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 886
                                           ; SOURCE LINE # 887
0006 120000      R     LCALL   cfg_dma_init
                                           ; SOURCE LINE # 890
0009 7B01              MOV     R3,#01H
000B 7A50              MOV     R2,#050H
000D 7903              MOV     R1,#03H
000F 120000      E     LCALL   _cyread8
0012 EF                MOV     A,R7
0013 4402              ORL     A,#02H
0015 FD                MOV     R5,A
0016 7B01              MOV     R3,#01H
0018 7A50              MOV     R2,#050H
001A 7903              MOV     R1,#03H
001C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 891
001F 7B01              MOV     R3,#01H
0021 7A50              MOV     R2,#050H
0023 7913              MOV     R1,#013H
0025 120000      E     LCALL   _cyread8
0028 EF                MOV     A,R7
0029 4402              ORL     A,#02H
002B FD                MOV     R5,A
002C 7B01              MOV     R3,#01H
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 24  

002E 7A50              MOV     R2,#050H
0030 7913              MOV     R1,#013H
0032 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 894
0035 9043A0            MOV     DPTR,#043A0H
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B 4440              ORL     A,#040H
003D FF                MOV     R7,A
003E 9043A0            MOV     DPTR,#043A0H
0041 EF                MOV     A,R7
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 895
0043 9043C2            MOV     DPTR,#043C2H
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 4410              ORL     A,#010H
004B FF                MOV     R7,A
004C 9043C2            MOV     DPTR,#043C2H
004F EF                MOV     A,R7
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 896
                                           ; SOURCE LINE # 899
0051 7C00        R     MOV     R4,#HIGH BS_IOPINS0_0_VAL
0053 7D00        R     MOV     R5,#LOW BS_IOPINS0_0_VAL
0055 7B00              MOV     R3,#00H
0057 7A51              MOV     R2,#051H
0059 7900              MOV     R1,#00H
005B 7F0A              MOV     R7,#0AH
005D 7E00              MOV     R6,#00H
005F 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 900
0062 7C00        R     MOV     R4,#HIGH BS_IOPINS0_7_VAL
0064 7D00        R     MOV     R5,#LOW BS_IOPINS0_7_VAL
0066 7B00              MOV     R3,#00H
0068 7A51              MOV     R2,#051H
006A 79C2              MOV     R1,#0C2H
006C 7F08              MOV     R7,#08H
006E 7E00              MOV     R6,#00H
0070 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 901
0073 7C00        R     MOV     R4,#HIGH BS_IOPINS0_8_VAL
0075 7D00        R     MOV     R5,#LOW BS_IOPINS0_8_VAL
0077 7B00              MOV     R3,#00H
0079 7A51              MOV     R2,#051H
007B 79F2              MOV     R1,#0F2H
007D 7F08              MOV     R7,#08H
007F 7E00              MOV     R6,#00H
0081 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 902
0084 7C00        R     MOV     R4,#HIGH BS_IOPINS0_2_VAL
0086 7D00        R     MOV     R5,#LOW BS_IOPINS0_2_VAL
0088 7B00              MOV     R3,#00H
008A 7A51              MOV     R2,#051H
008C 7922              MOV     R1,#022H
008E 7F08              MOV     R7,#08H
0090 7E00              MOV     R6,#00H
0092 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 903
0095 7C00        R     MOV     R4,#HIGH BS_IOPINS0_3_VAL
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 25  

0097 7D00        R     MOV     R5,#LOW BS_IOPINS0_3_VAL
0099 7B00              MOV     R3,#00H
009B 7A51              MOV     R2,#051H
009D 7930              MOV     R1,#030H
009F 7F0A              MOV     R7,#0AH
00A1 7E00              MOV     R6,#00H
00A3 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 904
00A6 7C00        R     MOV     R4,#HIGH BS_IOPINS0_4_VAL
00A8 7D00        R     MOV     R5,#LOW BS_IOPINS0_4_VAL
00AA 7B00              MOV     R3,#00H
00AC 7A51              MOV     R2,#051H
00AE 7942              MOV     R1,#042H
00B0 7F08              MOV     R7,#08H
00B2 7E00              MOV     R6,#00H
00B4 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 905
00B7 7C00        R     MOV     R4,#HIGH BS_IOPINS0_5_VAL
00B9 7D00        R     MOV     R5,#LOW BS_IOPINS0_5_VAL
00BB 7B00              MOV     R3,#00H
00BD 7A51              MOV     R2,#051H
00BF 7950              MOV     R1,#050H
00C1 7F0A              MOV     R7,#0AH
00C3 7E00              MOV     R6,#00H
00C5 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 906
00C8 7C00        R     MOV     R4,#HIGH BS_IOPINS0_6_VAL
00CA 7D00        R     MOV     R5,#LOW BS_IOPINS0_6_VAL
00CC 7B00              MOV     R3,#00H
00CE 7A51              MOV     R2,#051H
00D0 7962              MOV     R1,#062H
00D2 7F08              MOV     R7,#08H
00D4 7E00              MOV     R6,#00H
00D6 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 907
00D9 9044F4            MOV     DPTR,#044F4H
00DC 7401              MOV     A,#01H
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 908
00DF 904689            MOV     DPTR,#04689H
00E2 743A              MOV     A,#03AH
00E4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 912
00E5 904800            MOV     DPTR,#04800H
00E8 E4                CLR     A
00E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 914
00EA 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 916
00ED 904800            MOV     DPTR,#04800H
00F0 7480              MOV     A,#080H
00F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 919
00F3 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 922
00F6 7B00              MOV     R3,#00H
00F8 7A43              MOV     R2,#043H
00FA 79A0              MOV     R1,#0A0H
00FC C003              PUSH    AR3
00FE C002              PUSH    AR2
0100 C001              PUSH    AR1
0102 7B00              MOV     R3,#00H
C51 COMPILER V9.03   CYFITTER_CFG                                                          09/24/2013 19:17:05 PAGE 26  

0104 7A43              MOV     R2,#043H
0106 79B0              MOV     R1,#0B0H
0108 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
010B 120000      E     LCALL   ?C?PSTXDATA
010E D001              POP     AR1
0110 D002              POP     AR2
0112 D003              POP     AR3
0114 7F0E              MOV     R7,#0EH
0116 7E00              MOV     R6,#00H
0118 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 923
011B 9043B0            MOV     DPTR,#043B0H
011E E0                MOVX    A,@DPTR
011F FF                MOV     R7,A
0120 EF                MOV     A,R7
0121 54FD              ANL     A,#0FDH
0123 FF                MOV     R7,A
0124 9043B0            MOV     DPTR,#043B0H
0127 EF                MOV     A,R7
0128 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 924
0129 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    886    ----
   CONSTANT SIZE    =   6049    ----
   XDATA SIZE       =      4       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
