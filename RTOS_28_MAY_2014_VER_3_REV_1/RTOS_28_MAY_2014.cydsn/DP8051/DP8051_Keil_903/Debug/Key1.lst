C51 COMPILER V9.03   KEY1                                                                  09/24/2013 19:16:58 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE KEY1
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\Key1.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.0\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\Key1.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\Key1.lst) CD DB NOIP OT(2,SIZE)
                    - INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\Key1.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: Key1.c  
   3          * Version 1.60
   4          *
   5          * Description:
   6          *  This file contains API to enable firmware control of a Pins component.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include "cytypes.h"
  18          #include "Key1.h"
  19          
  20          
  21          /*******************************************************************************
  22          * Function Name: Key1_Write
  23          ********************************************************************************
  24          * Summary:
  25          *  Assign a new value to the digital port's data output register.  
  26          *
  27          * Parameters:  
  28          *  prtValue:  The value to be assigned to the Digital Port. 
  29          *
  30          * Return: 
  31          *  void 
  32          *  
  33          *******************************************************************************/
  34          void Key1_Write(uint8 value) 
  35          {
  36   1          uint8 staticBits = Key1_DR & ~Key1_MASK;
  37   1          Key1_DR = staticBits | ((value << Key1_SHIFT) & Key1_MASK);
  38   1      }
  39          
  40          
  41          /*******************************************************************************
  42          * Function Name: Key1_SetDriveMode
  43          ********************************************************************************
  44          * Summary:
  45          *  Change the drive mode on the pins of the port.
  46          * 
  47          * Parameters:  
  48          *  mode:  Change the pins to this drive mode.
  49          *
  50          * Return: 
  51          *  void
  52          *
  53          *******************************************************************************/
C51 COMPILER V9.03   KEY1                                                                  09/24/2013 19:16:58 PAGE 2   

  54          void Key1_SetDriveMode(uint8 mode) 
  55          {
  56   1              CyPins_SetPinDriveMode(Key1_0, mode);
  57   1              CyPins_SetPinDriveMode(Key1_1, mode);
  58   1              CyPins_SetPinDriveMode(Key1_2, mode);
  59   1      }
  60          
  61          
  62          /*******************************************************************************
  63          * Function Name: Key1_Read
  64          ********************************************************************************
  65          * Summary:
  66          *  Read the current value on the pins of the Digital Port in right justified 
  67          *  form.
  68          *
  69          * Parameters:  
  70          *  void 
  71          *
  72          * Return: 
  73          *  Returns the current value of the Digital Port as a right justified number
  74          *  
  75          * Note:
  76          *  Macro Key1_ReadPS calls this function. 
  77          *  
  78          *******************************************************************************/
  79          uint8 Key1_Read(void) 
  80          {
  81   1          return (Key1_PS & Key1_MASK) >> Key1_SHIFT;
  82   1      }
  83          
  84          
  85          /*******************************************************************************
  86          * Function Name: Key1_ReadDataReg
  87          ********************************************************************************
  88          * Summary:
  89          *  Read the current value assigned to a Digital Port's data output register
  90          *
  91          * Parameters:  
  92          *  void 
  93          *
  94          * Return: 
  95          *  Returns the current value assigned to the Digital Port's data output register
  96          *  
  97          *******************************************************************************/
  98          uint8 Key1_ReadDataReg(void) 
  99          {
 100   1          return (Key1_DR & Key1_MASK) >> Key1_SHIFT;
 101   1      }
 102          
 103          
 104          /* If Interrupts Are Enabled for this Pins component */ 
 105          #if defined(Key1_INTSTAT) 
              
                  /*******************************************************************************
                  * Function Name: Key1_ClearInterrupt
                  ********************************************************************************
                  * Summary:
                  *  Clears any active interrupts attached to port and returns the value of the 
                  *  interrupt status register.
                  *
                  * Parameters:  
                  *  void 
C51 COMPILER V9.03   KEY1                                                                  09/24/2013 19:16:58 PAGE 3   

                  *
                  * Return: 
                  *  Returns the value of the interrupt status register
                  *  
                  *******************************************************************************/
                  uint8 Key1_ClearInterrupt(void) 
                  {
                      return (Key1_INTSTAT & Key1_MASK) >> Key1_SHIFT;
                  }
              
              #endif /* If Interrupts Are Enabled for this Pins component */ 
 127          
 128          
 129          /* [] END OF FILE */ 
C51 COMPILER V9.03   KEY1                                                                  09/24/2013 19:16:58 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _Key1_Write (BEGIN)
                                           ; SOURCE LINE # 34
0000 900000      R     MOV     DPTR,#value
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0005 905100            MOV     DPTR,#05100H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 54F8              ANL     A,#0F8H
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#staticBits
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 37
0013 900000      R     MOV     DPTR,#value
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 5407              ANL     A,#07H
001B FF                MOV     R7,A
001C 900000      R     MOV     DPTR,#staticBits
001F E0                MOVX    A,@DPTR
0020 FE                MOV     R6,A
0021 EF                MOV     A,R7
0022 4E                ORL     A,R6
0023 FF                MOV     R7,A
0024 905100            MOV     DPTR,#05100H
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0029 22                RET     
             ; FUNCTION _Key1_Write (END)

             ; FUNCTION _Key1_SetDriveMode (BEGIN)
                                           ; SOURCE LINE # 54
0000 900000      R     MOV     DPTR,#mode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
0005 900000      R     MOV     DPTR,#mode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 540E              ANL     A,#0EH
000D FF                MOV     R7,A
000E 905000            MOV     DPTR,#05000H
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 EE                MOV     A,R6
0014 54F1              ANL     A,#0F1H
0016 FE                MOV     R6,A
0017 EE                MOV     A,R6
0018 4F                ORL     A,R7
0019 FF                MOV     R7,A
001A 905000            MOV     DPTR,#05000H
C51 COMPILER V9.03   KEY1                                                                  09/24/2013 19:16:58 PAGE 5   

001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
001F 900000      R     MOV     DPTR,#mode
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 EF                MOV     A,R7
0025 540E              ANL     A,#0EH
0027 FF                MOV     R7,A
0028 905001            MOV     DPTR,#05001H
002B E0                MOVX    A,@DPTR
002C FE                MOV     R6,A
002D EE                MOV     A,R6
002E 54F1              ANL     A,#0F1H
0030 FE                MOV     R6,A
0031 EE                MOV     A,R6
0032 4F                ORL     A,R7
0033 FF                MOV     R7,A
0034 905001            MOV     DPTR,#05001H
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 58
0039 900000      R     MOV     DPTR,#mode
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E EF                MOV     A,R7
003F 540E              ANL     A,#0EH
0041 FF                MOV     R7,A
0042 905002            MOV     DPTR,#05002H
0045 E0                MOVX    A,@DPTR
0046 FE                MOV     R6,A
0047 EE                MOV     A,R6
0048 54F1              ANL     A,#0F1H
004A FE                MOV     R6,A
004B EE                MOV     A,R6
004C 4F                ORL     A,R7
004D FF                MOV     R7,A
004E 905002            MOV     DPTR,#05002H
0051 EF                MOV     A,R7
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 59
0053 22                RET     
             ; FUNCTION _Key1_SetDriveMode (END)

             ; FUNCTION Key1_Read (BEGIN)
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
0000 905101            MOV     DPTR,#05101H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5407              ANL     A,#07H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
                                           ; SOURCE LINE # 82
000B         ?C0003:
000B 22                RET     
             ; FUNCTION Key1_Read (END)

             ; FUNCTION Key1_ReadDataReg (BEGIN)
                                           ; SOURCE LINE # 98
C51 COMPILER V9.03   KEY1                                                                  09/24/2013 19:16:58 PAGE 6   

                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
0000 905100            MOV     DPTR,#05100H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5407              ANL     A,#07H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
                                           ; SOURCE LINE # 101
000B         ?C0004:
000B 22                RET     
             ; FUNCTION Key1_ReadDataReg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    150    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
