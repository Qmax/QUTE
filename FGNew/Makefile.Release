#############################################################################
# Makefile for building: libFGInterface.so
# Generated by qmake (2.01a) (Qt 4.7.1) on: Thu Sep 25 11:30:04 2014
# Project:  FGNew.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = arm-linux-gcc
CXX           = arm-linux-g++
DEFINES       = -DQT_NO_DEBUG -DQT_PLUGIN -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -Os -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -Os -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/qws/linux-arm-g++ -I. -I/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/arm-cortex_a8-linux-gnueabi/sys-root/usr/include/QtCore -I/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/arm-cortex_a8-linux-gnueabi/sys-root/usr/include/QtNetwork -I/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/arm-cortex_a8-linux-gnueabi/sys-root/usr/include/QtGui -I/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/arm-cortex_a8-linux-gnueabi/sys-root/usr/include -Irelease -I.
LINK          = arm-linux-g++
LFLAGS        = -Wl,-O1 -shared
LIBS          = $(SUBLIBS)  -L/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/arm-cortex_a8-linux-gnueabi/sys-root/usr/lib -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = arm-linux-ar cqs
RANLIB        = 
QMAKE         = /usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = arm-linux-strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = ad5293.cpp \
		ad5318components.cpp \
		colors.cpp \
		fgmodel.cpp \
		hardwareinterface.cpp \
		plotter.cpp \
		ptfginterface.cpp \
		main.cpp \
		fg.cpp release/moc_hardwareinterface.cpp \
		release/moc_plotter.cpp \
		release/moc_ptfginterface.cpp \
		release/moc_fg.cpp \
		release/qrc_fp_res.cpp \
		release/qrc_fg.cpp
OBJECTS       = release/ad5293.o \
		release/ad5318components.o \
		release/colors.o \
		release/fgmodel.o \
		release/hardwareinterface.o \
		release/plotter.o \
		release/ptfginterface.o \
		release/main.o \
		release/fg.o \
		release/moc_hardwareinterface.o \
		release/moc_plotter.o \
		release/moc_ptfginterface.o \
		release/moc_fg.o \
		release/qrc_fp_res.o \
		release/qrc_fg.o
DIST          = /usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/common/g++.conf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/common/unix.conf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/common/linux.conf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/common/qws.conf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/qt_functions.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/qt_config.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/exclusive_builds.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/default_pre.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/release.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/debug_and_release.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/default_post.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/build_pass.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/warn_on.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/qt.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/unix/thread.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/moc.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/resources.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/uic.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/yacc.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/lex.prf \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/mkspecs/features/include_source_dir.prf \
		FGNew.pro
QMAKE_TARGET  = FGInterface
DESTDIR       = /exports/nfsroot-ccwmx51js/home/
TARGET        = libFGInterface.so
TARGETD       = libFGInterface.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release  /exports/nfsroot-ccwmx51js/home/$(TARGET)

/exports/nfsroot-ccwmx51js/home/$(TARGET): ui_fg.h $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) /exports/nfsroot-ccwmx51js/home/ || $(MKDIR) /exports/nfsroot-ccwmx51js/home/ 
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-$(MOVE) $(TARGET) /exports/nfsroot-ccwmx51js/home/



qmake:  FORCE
	@$(QMAKE) CONFIG+=debug_and_release -o Makefile.Release FGNew.pro

dist: 
	@$(CHK_DIR_EXISTS) release/FGInterface1.0.0 || $(MKDIR) release/FGInterface1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/FGInterface1.0.0/ && $(COPY_FILE) --parents AWGUIInterface2.h AWGUIInterface.h serialdevice.h RefCALIBTestJigInterface.h FGMacros.h AppdeviceRegisterDetails.h ApplicationCardInterface.h BackPlaneInterface.h CalibrationInterfaces.h GPIOInterfaces.h IPSOCCommunication.h InterfaceFunctionalComponents.h InterfacePTLibrary.h PTAppBckPsocInterface.h PTEventInterfaces.h PTGPIOEventInterfaces.h PTSPIMemoryInterface.h ad5293.h ad5318components.h appcardcomponents.h appcardfunctiontemplate.h colors.h fgmodel.h hardwareinterface.h interfaceHeader.h plotter.h ptfginterface.h Waveformclass.h fg.h RefCALIBTestJigInterface.h release/FGInterface1.0.0/ && $(COPY_FILE) --parents fp_res.qrc fg.qrc release/FGInterface1.0.0/ && $(COPY_FILE) --parents ad5293.cpp ad5318components.cpp colors.cpp fgmodel.cpp hardwareinterface.cpp plotter.cpp ptfginterface.cpp main.cpp fg.cpp release/FGInterface1.0.0/ && $(COPY_FILE) --parents fg.ui release/FGInterface1.0.0/ && (cd `dirname release/FGInterface1.0.0` && $(TAR) FGInterface1.0.0.tar FGInterface1.0.0 && $(COMPRESS) FGInterface1.0.0.tar) && $(MOVE) `dirname release/FGInterface1.0.0`/FGInterface1.0.0.tar.gz . && $(DEL_FILE) -r release/FGInterface1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


check: first

/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_hardwareinterface.cpp release/moc_plotter.cpp release/moc_ptfginterface.cpp release/moc_fg.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_hardwareinterface.cpp release/moc_plotter.cpp release/moc_ptfginterface.cpp release/moc_fg.cpp
release/moc_hardwareinterface.cpp: ApplicationCardInterface.h \
		appcardfunctiontemplate.h \
		AppdeviceRegisterDetails.h \
		PTSPIMemoryInterface.h \
		ad5293.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ad5318components.h \
		Waveformclass.h \
		plotter.h \
		fgmodel.h \
		hardwareinterface.h \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc
	/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc $(DEFINES) $(INCPATH) hardwareinterface.h -o release/moc_hardwareinterface.cpp

release/moc_plotter.cpp: plotter.h \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc
	/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc $(DEFINES) $(INCPATH) plotter.h -o release/moc_plotter.cpp

release/moc_ptfginterface.cpp: interfaceHeader.h \
		fg.h \
		InterfacePTLibrary.h \
		Waveformclass.h \
		plotter.h \
		fgmodel.h \
		FGMacros.h \
		hardwareinterface.h \
		ApplicationCardInterface.h \
		appcardfunctiontemplate.h \
		AppdeviceRegisterDetails.h \
		PTSPIMemoryInterface.h \
		ad5293.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ad5318components.h \
		BackPlaneInterface.h \
		IPSOCCommunication.h \
		PTEventInterfaces.h \
		GPIOInterfaces.h \
		PTGPIOEventInterfaces.h \
		PTAppBckPsocInterface.h \
		RefCALIBTestJigInterface.h \
		serialdevice.h \
		AWGUIInterface.h \
		AWGUIInterface2.h \
		ptfginterface.h \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc
	/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc $(DEFINES) $(INCPATH) ptfginterface.h -o release/moc_ptfginterface.cpp

release/moc_fg.cpp: InterfacePTLibrary.h \
		Waveformclass.h \
		plotter.h \
		fgmodel.h \
		FGMacros.h \
		hardwareinterface.h \
		ApplicationCardInterface.h \
		appcardfunctiontemplate.h \
		AppdeviceRegisterDetails.h \
		PTSPIMemoryInterface.h \
		ad5293.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ad5318components.h \
		BackPlaneInterface.h \
		IPSOCCommunication.h \
		PTEventInterfaces.h \
		GPIOInterfaces.h \
		PTGPIOEventInterfaces.h \
		PTAppBckPsocInterface.h \
		RefCALIBTestJigInterface.h \
		serialdevice.h \
		AWGUIInterface.h \
		AWGUIInterface2.h \
		fg.h \
		/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc
	/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/moc $(DEFINES) $(INCPATH) fg.h -o release/moc_fg.cpp

compiler_rcc_make_all: release/qrc_fp_res.cpp release/qrc_fg.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release/qrc_fp_res.cpp release/qrc_fg.cpp
release/qrc_fp_res.cpp: fp_res.qrc \
		res/pb-green.png \
		res/pb-red.png \
		res/awg.png \
		res/up-icon_released.png \
		fp_images/gnd.png \
		fp_images/power.png \
		fp_images/red.png \
		fp_images/ref.png \
		fp_images/usb.png \
		fp_images/VI_SL_ICM.png \
		fp_images/fuse.png \
		fp_images/bnc.png \
		fp_images/usb_symbol.png \
		fp_images/guard.png \
		fp_images/black.png
	/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/rcc -name fp_res fp_res.qrc -o release/qrc_fp_res.cpp

release/qrc_fg.cpp: fg.qrc \
		res/pressed.svg \
		res/knob_off.svg \
		res/fine.png \
		res/centerButton.png \
		res/Triangle.png \
		res/up-icon_released.png \
		res/redSine.png \
		res/awg2.png \
		res/down.png \
		res/logout-icon.png \
		res/sinewave.png \
		res/Settings-icon.png \
		res/upButton.png \
		res/coarse.png \
		res/up-icon.png \
		res/downButton.png \
		res/awg3.png \
		res/redSquare.png \
		res/knob_on.svg \
		res/down-icon_pressed.png \
		res/fuse.png \
		res/BNC.png \
		res/Button-Blank-Gray-icon.png \
		res/left-icon.png \
		res/down-icon.png \
		res/right-icon.png \
		res/pressedRed.png \
		res/normal.svg \
		res/leftButton.png \
		res/Letter-R-icon.png \
		res/Settings-icon2.png \
		res/Awgb.png \
		res/left-icon_pressed.png \
		res/pressedOrange.png \
		res/Control-Panel-icon.png \
		res/redRamp.png \
		res/rightButton.png \
		res/right-icon_preseed.png \
		res/redTriangle.png \
		res/ramp.png
	/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/rcc -name fg fg.qrc -o release/qrc_fg.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_fg.h
compiler_uic_clean:
	-$(DEL_FILE) ui_fg.h
ui_fg.h: fg.ui
	/usr/local/DigiEL-5.6/x-tools/arm-cortex_a8-linux-gnueabi/bin/uic fg.ui -o ui_fg.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

release/ad5293.o: ad5293.cpp ad5293.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ApplicationCardInterface.h \
		appcardfunctiontemplate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ad5293.o ad5293.cpp

release/ad5318components.o: ad5318components.cpp ad5318components.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ApplicationCardInterface.h \
		appcardfunctiontemplate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ad5318components.o ad5318components.cpp

release/colors.o: colors.cpp colors.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/colors.o colors.cpp

release/fgmodel.o: fgmodel.cpp fgmodel.h \
		Waveformclass.h \
		plotter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/fgmodel.o fgmodel.cpp

release/hardwareinterface.o: hardwareinterface.cpp hardwareinterface.h \
		ApplicationCardInterface.h \
		appcardfunctiontemplate.h \
		AppdeviceRegisterDetails.h \
		PTSPIMemoryInterface.h \
		ad5293.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ad5318components.h \
		Waveformclass.h \
		plotter.h \
		fgmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/hardwareinterface.o hardwareinterface.cpp

release/plotter.o: plotter.cpp plotter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/plotter.o plotter.cpp

release/ptfginterface.o: ptfginterface.cpp ptfginterface.h \
		interfaceHeader.h \
		fg.h \
		InterfacePTLibrary.h \
		Waveformclass.h \
		plotter.h \
		fgmodel.h \
		FGMacros.h \
		hardwareinterface.h \
		ApplicationCardInterface.h \
		appcardfunctiontemplate.h \
		AppdeviceRegisterDetails.h \
		PTSPIMemoryInterface.h \
		ad5293.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ad5318components.h \
		BackPlaneInterface.h \
		IPSOCCommunication.h \
		PTEventInterfaces.h \
		GPIOInterfaces.h \
		PTGPIOEventInterfaces.h \
		PTAppBckPsocInterface.h \
		RefCALIBTestJigInterface.h \
		serialdevice.h \
		AWGUIInterface.h \
		AWGUIInterface2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ptfginterface.o ptfginterface.cpp

release/main.o: main.cpp fg.h \
		InterfacePTLibrary.h \
		Waveformclass.h \
		plotter.h \
		fgmodel.h \
		FGMacros.h \
		hardwareinterface.h \
		ApplicationCardInterface.h \
		appcardfunctiontemplate.h \
		AppdeviceRegisterDetails.h \
		PTSPIMemoryInterface.h \
		ad5293.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ad5318components.h \
		BackPlaneInterface.h \
		IPSOCCommunication.h \
		PTEventInterfaces.h \
		GPIOInterfaces.h \
		PTGPIOEventInterfaces.h \
		PTAppBckPsocInterface.h \
		RefCALIBTestJigInterface.h \
		serialdevice.h \
		AWGUIInterface.h \
		AWGUIInterface2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/fg.o: fg.cpp fg.h \
		InterfacePTLibrary.h \
		Waveformclass.h \
		plotter.h \
		fgmodel.h \
		FGMacros.h \
		hardwareinterface.h \
		ApplicationCardInterface.h \
		appcardfunctiontemplate.h \
		AppdeviceRegisterDetails.h \
		PTSPIMemoryInterface.h \
		ad5293.h \
		InterfaceFunctionalComponents.h \
		appcardcomponents.h \
		ad5318components.h \
		BackPlaneInterface.h \
		IPSOCCommunication.h \
		PTEventInterfaces.h \
		GPIOInterfaces.h \
		PTGPIOEventInterfaces.h \
		PTAppBckPsocInterface.h \
		RefCALIBTestJigInterface.h \
		serialdevice.h \
		AWGUIInterface.h \
		AWGUIInterface2.h \
		ui_fg.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/fg.o fg.cpp

release/moc_hardwareinterface.o: release/moc_hardwareinterface.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_hardwareinterface.o release/moc_hardwareinterface.cpp

release/moc_plotter.o: release/moc_plotter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_plotter.o release/moc_plotter.cpp

release/moc_ptfginterface.o: release/moc_ptfginterface.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_ptfginterface.o release/moc_ptfginterface.cpp

release/moc_fg.o: release/moc_fg.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_fg.o release/moc_fg.cpp

release/qrc_fp_res.o: release/qrc_fp_res.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/qrc_fp_res.o release/qrc_fp_res.cpp

release/qrc_fg.o: release/qrc_fg.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/qrc_fg.o release/qrc_fg.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

